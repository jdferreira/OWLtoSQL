{
	// This file contains the information needed to extract information from OWL
	// files
	
	// You can give some variables to be used further down on the rest of this
	// file. For a variable with name "var", you can refer to its value as
	// "${var}" in the rest of the XML content. It will be replaced by the value
	// of that variable. Notice that in the following case
	//
	// "variables": { "A": "${C}", "B": "value1", "C": "This is ${B}" },
	//
	// ${C} would be translated as "This is value1", and ${A} would also be
	// replaces with "This is value1". However, cyclic references are caught and
	// if any is found, an error occurs. Using a non-defined parameter is an
	// error further down the file. To escape the dollar sign in a string, it
	// must be doubled:
	//
	// "variables": { "temp": "$$ is a dollar sign" }
	//
	// Since all values are expanded in this way (except keys on JSON objects),
	// this escaping mechanism must be used in every such string, if needed.
	
	"variables" : {
		// "home": "/home/jferreira/Ontologies"
		"home": "/home/joao/Documents/Ontologies"
	},
	
	
	// You can specify an ontology to load via the "ontologies" JSON array. This
	// options expects a valid URL that can be retrieved from the system (file:)
	// or from the web (http:).
	// At least one ontology must be provided
	
	"ontologies": [
		"file:${home}/pizza.owl"
	],
	
	
	// MySQL parameters must be given. The "mysql" JSON object contains the name
	// of the database and the authentication parameters (username and password).
	// Failing to give any of these attributes is an error. Additionally, you
	// can also given the optional "host" parameter; if not gien, "localhost" is
	// used.
	
	"mysql": {
		"database": "owltosql",
		"username": "owltosql",
		"password": "owltosql",
		"host": "localhost"
	},
	
	
	"extractors": [
		{ "class": "pt.owlsql.extractors.SQLCoreUtils" },
		{ "class": "pt.owlsql.extractors.NamesExtractor",
			"properties": [ "http://www.w3.org/2000/01/rdf-schema#label" ] },
		{ "class": "pt.owlsql.extractors.HierarchyExtractor" },
		{ "class": "pt.owlsql.extractors.ExtendedHierarchyExtractor",
			"properties": [ "http://www.co-ode.org/ontologies/pizza/pizza.owl#hasIngredient" ],
			"identifier": "ingredients",
			"subproperties": true,
			"emulate": [ "transitive" ] },
		{ "class": "pt.owlsql.extractors.LeavesExtractor" },
		{ "class": "pt.owlsql.extractors.IntrinsicICExtractor",
			"zhou_k": 0.5 },
		// { "class": "pt.owlsql.extractors.ExtrinsicICExtractor" },
		{ "class": "pt.owlsql.extractors.DisjointnessExtractor" }
	]
}